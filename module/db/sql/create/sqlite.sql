-- user
CREATE TABLE IF NOT EXISTS "user" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  "name" TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "password" (
  user INTEGER UNIQUE REFERENCES user (id) ON DELETE CASCADE,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  "password" TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS "cookie" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user INTEGER REFERENCES user (id) ON DELETE CASCADE,
  cookie TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "token" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user INTEGER REFERENCES user (id) ON DELETE CASCADE,
  token TEXT NOT NULL,
  "permissions" JSON NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Server
CREATE TABLE IF NOT EXISTS "server" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  "owner" INTEGER REFERENCES user (id) ON DELETE CASCADE,
  "name" TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  "version" TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "friends" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  server_id INTEGER REFERENCES server (id) ON DELETE CASCADE,
  "user_id" INTEGER REFERENCES user (id) ON DELETE CASCADE,
  "permissions" JSON NOT NULL
);
CREATE TABLE IF NOT EXISTS "backups" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  server_id INTEGER REFERENCES server (id) ON DELETE CASCADE,
  uuid TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  "version" TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "runner" (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  is_global BOOLEAN NOT NULL,
  is_local BOOLEAN NOT NULL,
  "user_id" INTEGER REFERENCES user (id) ON DELETE CASCADE
);