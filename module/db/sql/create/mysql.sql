-- user
CREATE TABLE IF NOT EXISTS `user` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  username TEXT UNIQUE NOT NULL,
  `name` TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS `password` (
  user INT UNIQUE REFERENCES `user` (id) ON DELETE CASCADE,
  `password` TEXT NOT NULL,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS `cookie` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  user INT REFERENCES `user` (id) ON DELETE CASCADE,
  cookie TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS `token` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  user INT REFERENCES `user` (id) ON DELETE CASCADE,
  token TEXT NOT NULL,
  `permissions` JSON NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
-- Server
CREATE TABLE IF NOT EXISTS `server` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  `owner` INT REFERENCES `user` (id) ON DELETE CASCADE,
  `name` TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  `version` TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  update_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS `friends` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  server_id INT REFERENCES `server` (id) ON DELETE CASCADE,
  `user_id` INT REFERENCES `user` (id) ON DELETE CASCADE,
  `permissions` JSON NOT NULL,
  UNIQUE(server_id, user_id)
);
CREATE TABLE IF NOT EXISTS `backups` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  server_id INT REFERENCES `server` (id) ON DELETE CASCADE,
  uuid TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  `version` TEXT NOT NULL,
  create_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS `runner` (
  id INT PRIMARY KEY AUTO_INCREMENT,
  is_global BOOLEAN NOT NULL,
  is_local BOOLEAN NOT NULL,
  `user_id` INT REFERENCES `user` (id) ON DELETE CASCADE
);
