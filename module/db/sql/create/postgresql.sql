-- user
CREATE TABLE IF NOT EXISTS "user" (
  id SERIAL PRIMARY KEY,
  username TEXT UNIQUE NOT NULL,
  "name" TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  create_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  update_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "password" (
  "user" INTEGER UNIQUE REFERENCES "user" (id) ON DELETE CASCADE,
  "password" TEXT NOT NULL,
  update_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "cookie" (
  id SERIAL PRIMARY KEY,
  "user" INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
  cookie TEXT NOT NULL,
  create_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "token" (
  id SERIAL PRIMARY KEY,
  "user" INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
  token TEXT NOT NULL,
  "permissions" JSONB NOT NULL,
  create_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  update_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
-- Server
CREATE TABLE IF NOT EXISTS "server" (
  id SERIAL PRIMARY KEY,
  "owner" INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
  "name" TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  "version" TEXT NOT NULL,
  create_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  update_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "friends" (
  id SERIAL PRIMARY KEY,
  server_id INTEGER REFERENCES "server" (id) ON DELETE CASCADE,
  "user_id" INTEGER REFERENCES "user" (id) ON DELETE CASCADE,
  "permissions" JSONB NOT NULL,
  UNIQUE(server_id, user_id)
);
CREATE TABLE IF NOT EXISTS "backups" (
  id SERIAL PRIMARY KEY,
  server_id INTEGER REFERENCES "server" (id) ON DELETE CASCADE,
  uuid TEXT NOT NULL,
  software VARCHAR(128) NOT NULL,
  "version" TEXT NOT NULL,
  create_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "runner" (
  id SERIAL PRIMARY KEY,
  is_global BOOLEAN NOT NULL,
  is_local BOOLEAN NOT NULL,
  "user_id" INTEGER REFERENCES "user" (id) ON DELETE CASCADE
);
